import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';

@Component({
  selector: 'app-client-section',
  templateUrl: './client-section.component.html',
  styleUrls: ['./client-section.component.css']
})
export class ClientSectionComponent implements OnInit, OnChanges {
  @Input() clients: any[] = [];
  @Input() errors: any[] = [];
  @Input() hidden: boolean = false;
  @Input() title: string = '';
  @Input() errorMessage: string = '';
  @Input() errorId: string = '';
  @Input() showLegalName: boolean = false;
  @Input() showClientName: boolean = false;
  @Input() showClientDOB: boolean = false;
  @Input() showClientSiren: boolean = false;

  @Output() toggle = new EventEmitter<void>();

  filteredClients: any[] = [];

  ngOnInit(): void {
    // Initialisation si nécessaire
  }

  ngOnChanges(changes: SimpleChanges): void {
    if (changes['clients'] || changes['errors']) {
      this.processClientsData();
    }
  }

  processClientsData() {
    this.filteredClients = this.clients.map(client => {
      return {
        ...client,
        // Vous pouvez également ajouter des traitements de données ici si nécessaire
        displayName: this.getClientDisplayName(client),
        displayDOB: this.getClientDisplayDOB(client),
        displaySiren: this.getClientDisplaySiren(client)
      };
    });
  }

  onToggle() {
    this.toggle.emit();
  }

  private getClientDisplayName(client: any): string {
    if (this.showClientName) {
      return `${client.civility}. ${client.nomUsageClient} ${client.prenomClient}`;
    }
    return '';
  }

  private getClientDisplayDOB(client: any): string {
    if (this.showClientDOB) {
      return `né(e) le : ${client.dateNaissanceClient}`;
    }
    return '';
  }

  private getClientDisplaySiren(client: any): string {
    if (this.showClientSiren) {
      return `SIREN : ${client.siren}`;
    }
    return '';
  }
}
