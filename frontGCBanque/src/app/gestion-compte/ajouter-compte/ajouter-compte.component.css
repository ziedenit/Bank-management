import { Component } from '@angular/core';

@Component({
  selector: 'app-your-component',
  templateUrl: './your-component.component.html',
  styleUrls: ['./your-component.component.css']
})
export class YourComponent {
  
  // Ajoutez cette propriété pour gérer la visibilité du formulaire
  afficherFormulaireObjetFinancement: boolean = false;

  ajouterObjetFinancement() {
    // Logique pour ajouter un nouvel objet de financement
    this.afficherFormulaireObjetFinancement = true;

    // Vous pouvez également ajouter une logique pour gérer la file d'Ariane ici
  }

  // Les méthodes hideDataClient et showDataClient doivent être définies ici
  hideDataClient() {
    this.hiddenClient = true;
  }

  showDataClient() {
    this.hiddenClient = false;
  }
}
///
<!-- Bouton ajouter un objet de financement et bloc client -->
<div class="container-fluid mb-4">
  <div class="row">
    <div class="col-auto">
      <div class="ajoutFinancement">
        <button mat-stroked-button (click)="ajouterObjetFinancement()">
          <img src="../../../assets/icons/plus.svg" />
          &nbsp;
          ajouter un objet de financement
        </button>
      </div>
    </div>
    <div class="col">
      <h2 class="Titre-01">Acquisition des données et des justificatifs</h2>
    </div>
  </div>
  
  <!-- Bloc clients Particuliers -->
  <div *ngIf="clientParticulier == true">
    <div class="row">
      <div class="col-12">
        <div class="nav">
          <img *ngIf="hiddenClient == false" src="../../../assets/icons/arrow-up.svg" (click)="hideDataClient()" />
          <img *ngIf="hiddenClient == true" src="../../../assets/icons/arrow-down.svg" (click)="showDataClient()" />
          &nbsp; Client ({{idRepers.length}})
        </div>
      </div>
    </div>
    <div class="row" *ngIf="elementClient">
      <div class="col-12">
        <ul class="list-group">
          <li class="list-group-item" *ngFor="let client of clientDataList">
            <div class="row">
              <div class="col">
                Nom &nbsp;&nbsp; <b>{{client.civility}}.&nbsp; {{client.nomUsageClient}} {{client.prenomClient}}</b>
              </div>
              <div class="col">
                né (e) le : &nbsp;&nbsp; <b>{{client.dateNaissanceClient}}</b>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
    <div class="row">
      <div class="col-lg-12">
        <!-- Affichage du message d'erreur -->
        <div *ngIf="errorrs.length > 0">
          <div class="error-message">
            <ul class="list-group">
              <li class="list-group-item" *ngFor="let error of errorrs">
                <div class="row">
                  <div class="col">
                    {{ error.messageErrorP }}
                  </div>
                  <div class="col">
                    idReper du Client: {{ error.idReperErrorP }}
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Bloc clients Entreprises -->
  <div *ngIf="clientParticulier == false">
    <div class="row">
      <div class="col-12">
        <div class="nav">
          <img *ngIf="hiddenClient == false" src="../../../assets/icons/arrow-up.svg" (click)="hideDataClient()" />
          <img *ngIf="hiddenClient == true" src="../../../assets/icons/arrow-down.svg" (click)="showDataClient()" />
          &nbsp; Client ({{idRepers.length}})
        </div>
      </div>
    </div>
    <div class="row" *ngIf="elementClient">
      <div class="col-12">
        <ul class="list-group">
          <li class="list-group-item" *ngFor="let client of entrepriseData">
            <div class="row">
              <div class="col" *ngIf="!nonraison">
                Raison Sociale &nbsp; &nbsp; &nbsp; <b>{{client.legalName}}</b>
              </div>
            </div>
            <div class="row">
              <div class="col">
                Nom &nbsp; &nbsp; &nbsp; <b>{{client.civilite}}. &nbsp;{{client.usuaLastName}} {{client.firstName}}</b>
              </div>
              <div class="col">
                Siren &nbsp; &nbsp; &nbsp; <b>{{client.siren}}</b>
              </div>
            </div>
          </li>
        </ul>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <!-- Affichage du message d'erreur -->
        <div *ngIf="errors.length > 0">
          <div class="error-message">
            <ul class="list-group">
              <li class="list-group-item" *ngFor="let error of errors">
                <div class="row">
                  <div class="col">
                    {{ error.messageErrorE }}
                  </div>
                  <div class="col">
                    idReper: {{ error.idReperErrorE }}
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Formulaire du bloc objet de financement -->
<div *ngIf="afficherFormulaireObjetFinancement">
  <div class="form-group">
    <label for="champ1">Champ 1</label>
    <input type="text" id="champ1" class="form-control">
  </div>
  <div class="form-group">
    <label for="champ2">Champ 2</label>
    <input type="text" id="champ2" class="form-control">
  </div>
  <!-- Ajoutez d'autres champs selon vos besoins -->
</div>
///
.ajoutFinancement button {
  background-color: #007bff;
  color: white;
}

.Titre-01 {
  margin-left: 15px;
}

.container-fluid {
  display: flex;
  align-items: center;
}

.col-auto {
  flex: 0 0 auto;
}

.col {
  flex: 1 1 auto;
}
